openapi: 3.0.0
info:
  title: Bookstore API
  version: 1.0.0
paths:
  /books:
    get:
      summary: Get a list of books with pagination
      parameters:
        - name: page
          in: query
          description: Page number (default is 1)
          required: false
          schema:
            type: integer
        - name: limit
          in: query
          description: Number of books per page (default is 5)
          required: false
          schema:
            type: integer
      responses:
        "200":
          description: A list of books
        "404":
          description: No books to display
    post:
      summary: Create a new book
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Book"
      responses:
        "201":
          description: Book created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Book"
  /books/{id}:
    get:
      summary: Get a book by ID
      parameters:
        - name: id
          in: path
          description: The ID of the book to retrieve
          required: true
          schema:
            type: string
      responses:
        "200":
          description: The book with the specified ID
      "500":
        description: Something went wrong
    put:
      summary: Update a book by ID
      parameters:
        - name: id
          in: path
          description: The ID of the book to update
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Book"
      responses:
        "200":
          description: The updated book
        "500":
          description: Something went wrong
    delete:
      summary: Delete a book by ID
      parameters:
        - name: id
          in: path
          description: The ID of the book to delete
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Book deleted successfully
        "500":
          description: Something went wrong
  /auth/register:
    post:
      summary: Register a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          description: User registered successfully
        "500":
          description: Something went wrong
  /auth/login:
    post:
      summary: Login with user credentials
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginCredentials"
      responses:
        "200":
          description: User logged in successfully
        "500":
          description: Something went wrong
components:
  schemas:
    Book:
      type: object
      properties:
        name:
          type: string
        author:
          type: string
        description:
          type: string
    User:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
    LoginCredentials:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
servers:
  # Added by API Auto Mocking Plugin
  - description: Local Server
    url: https://localhost:3000
